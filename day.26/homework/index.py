# 1
# სია 10 ელემენტით
my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# 5-დან 8-მდე ინდექსების გამოყვანა
subset = my_list[4:8]
print(subset)  # [5, 6, 7, 8]

# 2
# Slicing გვეხმარება სიის, სტრინგის ან სხვა ინდექსირებული ობიექტის ნაწილი, ან სუბსეტი, ადვილად გამოვიტანოთ.
# შესაძლებელია მიუთითოთ ინდექსები, საიდან და სადამდე გვინდა ამოვიღოთ ელემენტები.
# შედეგად გვექნება საჭირო ელემენტების სია/სტრინგი/ობიექტი.

# 3
# სია 10 ელემენტით
my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# სიის შებრუნება
reversed_list = my_list[::-1]
print(reversed_list)  # [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

# 4
# სია 10 ელემენტით
my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# 10-ვე ელემენტის შეცვლა
for i in range(len(my_list)):
    my_list[i] = my_list[i] * 2  # ორჯერ გავამრავლოთ თითოეული ელემენტი

print(my_list)  # [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]

# 5
# string (სტრინგი) და list (სია) ორივე არის მონაცემთა ტიპი Python-ში.

# სტრინგი
# სტრინგი წარმოადგენს სიმბოლოების თანმიმდევრობას და გამოიყენება ტექსტის ან სიმბოლოების შემცველი მონაცემების შესანახად.
string_example = "Hello, World!"

# სია
# სია წარმოადგენს ელემენტების ორგანიზებულ სიას, რომლის შემადგენლობაში შესაძლოა იყოს სხვადასხვა ტიპის მონაცემები (სტრინგები, ციფრები, სხვა სიები და ა.შ.).
list_example = [1, 2, 3, "four", 5.0, [6, 7]]

# განსხვავება:
# 1. სტრინგი იწარმოება სიმბოლოების თანმიმდევრობით, ხოლო სია შეიძლება შეიცავდეს სხვადასხვა ტიპის ელემენტებს.
# 2. სტრინგი იწარმოება "" (ციტირებების) შორის, ხოლო სია იწარმოება [] (კუსულოების) შორის.
# 3. სტრინგი არის უცვლელობიანი (immutable), რაც ნიშნავს, რომ მისი ინდივიდუალური სიმბოლოები ვერ შეიცვლება.
#    სია არის ცვლადი (mutable), რაც ნიშნავს, რომ მისი ინდივიდუალური ელემენტები შეიძლება შეიცვალოს.
